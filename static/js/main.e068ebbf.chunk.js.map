{"version":3,"sources":["User.js","App.js","reportWebVitals.js","index.js"],"names":["User","name","city","street","bio","phone","username","email","website","suite","className","App","useState","users","setUsers","a","url","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","response","json","getData","then","data","console","log","map","user","i","address","company","catchPhrase","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOA6CeA,MA3Cf,YAUI,IATFC,EASC,EATDA,KACAC,EAQC,EARDA,KACAC,EAOC,EAPDA,OACAC,EAMC,EANDA,IACAC,EAKC,EALDA,MACAC,EAIC,EAJDA,SACAC,EAGC,EAHDA,MACAC,EAEC,EAFDA,QACAC,EACC,EADDA,MAEA,OACE,sBAAKC,UAAU,qBAAf,UACE,6BAAKT,IACL,4BAAIG,IACJ,8CAEA,sBAAKM,UAAU,qDAAf,UACE,uCACA,4BAAIH,OAEN,sBAAKG,UAAU,qDAAf,UACE,8CACA,4BAAIL,OAEN,sBAAKK,UAAU,oDAAf,UACE,yCACA,8BACGR,EADH,KACWC,EADX,KACqBM,QAGvB,sBAAKC,UAAU,qDAAf,UACE,0CACA,4BAAIJ,OAEN,sBAAKI,UAAU,qDAAf,UACE,yCACA,4BAAIF,W,MCgBGG,MAnDf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KADa,4CAEb,0CAAAC,EAAA,6DAAuBC,EAAvB,+BAA6B,GAA7B,SAEyBC,MAAMD,EAAK,CAChCE,OAAQ,MACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACP,eAAgB,oBAGlBC,SAAU,SACVC,eAAgB,gBAZpB,cAEQC,EAFR,yBAeSA,EAASC,QAflB,2CAFa,wBAuBb,OAvBa,0CAmBbC,CAAQ,8CAA8CC,MAAK,SAACC,GAC1DC,QAAQC,IAAIF,GACZf,EAASe,MAGT,sBAAKnB,UAAU,WAAf,UACE,sBAAKA,UAAU,wDAAf,UACG,IACD,oBAAIA,UAAU,GAAd,sBAGDG,EAAMmB,KAAI,SAACC,EAAMC,GAChB,OACE,qBAAaxB,UAAU,GAAvB,SACE,cAAC,EAAD,CACET,KAAMgC,EAAKhC,KACXM,MAAO0B,EAAK1B,MACZC,QAASyB,EAAKzB,QACdH,MAAO4B,EAAK5B,MACZH,KAAM+B,EAAKE,QAAQjC,KACnBC,OAAQ8B,EAAKE,QAAQhC,OACrBC,IAAK6B,EAAKG,QAAQC,YAClB5B,MAAOwB,EAAKE,QAAQ1B,MACpBH,SAAU2B,EAAK3B,YAVT4B,UCxBLI,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,Q,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e068ebbf.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction User({\r\n  name,\r\n  city,\r\n  street,\r\n  bio,\r\n  phone,\r\n  username,\r\n  email,\r\n  website,\r\n  suite,\r\n}) {\r\n  return (\r\n    <div className=\"border card shadow\">\r\n      <h1>{name}</h1>\r\n      <p>{bio}</p>\r\n      <h1>General info</h1>\r\n\r\n      <div className=\"d-flex  justify-content-between align-items-center\">\r\n        <h4>Email</h4>\r\n        <p>{email}</p>\r\n      </div>\r\n      <div className=\"d-flex  justify-content-between align-items-center\">\r\n        <h4>Phone number</h4>\r\n        <p>{phone}</p>\r\n      </div>\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <h4>Address</h4>\r\n        <p>\r\n          {city}, {street}, {suite}\r\n        </p>\r\n      </div>\r\n      <div className=\"d-flex  justify-content-between align-items-center\">\r\n        <h4>Username</h4>\r\n        <p>{username}</p>\r\n      </div>\r\n      <div className=\"d-flex  justify-content-between align-items-center\">\r\n        <h4>Website</h4>\r\n        <p>{website}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","import React, { useState } from \"react\";\nimport User from \"./User\";\nimport \"./App.css\";\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  async function getData(url = \"\") {\n    // Default options are marked with *\n    const response = await fetch(url, {\n      method: \"GET\", // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\", // no-cors, *cors, same-origin\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"same-origin\", // include, *same-origin, omit\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      redirect: \"follow\", // manual, *follow, error\n      referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n      // body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n    });\n    return response.json(); // parses JSON response into native JavaScript objects\n  }\n  getData(\"https://jsonplaceholder.typicode.com/users\").then((data) => {\n    console.log(data);\n    setUsers(data); // JSON data parsed by `data.json()` call\n  });\n  return (\n    <div className=\"mx-cus  \">\n      <div className=\"d-flex py-5 justify-content-center align-items-center\">\n        {\" \"}\n        <h1 className=\"\">USERS</h1>\n      </div>\n\n      {users.map((user, i) => {\n        return (\n          <div key={i} className=\"\">\n            <User\n              name={user.name}\n              email={user.email}\n              website={user.website}\n              phone={user.phone}\n              city={user.address.city}\n              street={user.address.street}\n              bio={user.company.catchPhrase}\n              suite={user.address.suite}\n              username={user.username}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}